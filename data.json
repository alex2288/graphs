{
    "theory" : "In mathematics, and more specifically in graph theory, a graph is a structure amounting to a set of objects in which some pairs of the objects are in some sense 'related'. The objects correspond to mathematical abstractions called vertices (also called nodes or points) and each of the related pairs of vertices is called an edge (also called an arc or line). \nTypically, a graph is depicted in diagrammatic form as a set of dots for the vertices, joined by lines or curves for the edges. Graphs are one of the objects of study in discrete mathematics.\nThe edges may be directed or undirected. For example, if the vertices represent people at a party, and there is an edge between two people if they shake hands, then this graph is undirected because any person A can shake hands with a person B only if B also shakes hands with A. In contrast, if any edge from a person A to a person B corresponds to A's admiring B, then this graph is directed, because admiration is not necessarily reciprocated. The former type of graph is called an undirected graph and the edges are called undirected edges while the latter type of graph is called a directed graph and the edges are called directed edges.",
	"help" : "In order to open the main menu double tap the screen in any location that is free of nodes. To access node menu you have to long press the node. To resize objects on the screen use the pinch gesture. \nIf you double tap the screen in a point where a node is located application can perform different actions, depending on the current work mode (graph mode, or tree mode). In graph mode the tapped node will get selected. Selected node has red background and bold blue border. Using this feature you can add or delete edges connected with selected node by double tapping an any other node. To undo the selection double tap the selected node. In tree mode tapping the node will result in hiding all it's child nodes with edges connected to them. Repeating the action will reveal hidden nodes.\nTo add a new node you need to long press an existing node, then move your finger on a screen area on appropriate distance from another nodes. Then fill the value of newly created node in appeared alert window. This will create a node connected to an existing node you pointed in the beginning. When working in graph mode you can create disconnected nodes by just long pressing on blank screen areas.\nTo use features listed in main menu follow the instructions on the screen. To find shortest path between nodes press the appropriate menu button, then double tap the node that is the first node of the path, then double tap the last node. If shortest path exists, application will paint nodes lying on the path in red and will change their values to their numbers in the path. To remove the shown path just open any menu. To complete a test of shortest path finding press the appropriate menu button, then perform actions, described for the previous feature. Then double tap the nodes, lying on the shortest path between the specified nodes. Instructions for BFS/DFS test in trees mode are pretty much same.",
    "questions":[
                 {
                 "question" : "What is a planar graph?\n\n1. Planar graph is a graph that can be embedded in the plane, in other words it can be drawn on the plane in such a way that its edges intersect only at their endpoints.\n\n2. Planar graph is a graph in which each pair of vertices is joined by an edge, which means that it contains all possible edges.",
                 "correct answer" : "1"
                 },
                 {
                 "question" : "An undirected graph is a graph in which edges have no orientation.\n\n1. No.\n\n2. Yes.",
                 "correct answer" : "2"
                 },
                 {
                 "question" : "How does Breadth-First Search algorithm work?\n\n1. It starts at the tree root (or some arbitrary node of a graph) and explores the neighbor nodes first, before moving to the next level neighbors.\n\n2. One starts at the root (selecting some arbitrary node as the root in the case of a graph) and explores as far as possible along each branch before backtracking.",
                 "correct answer" : "1"
                 }
     ]
}
